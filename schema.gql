# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""Add Contact Info Args"""
input AddContactInput {
  address: String
  cnpj: String
  companyID: String!
  cpf: String
  creditType: String
  email: String!
  name: String!
  opportunityValue: Float
  personType: String!
  phone: String
  propertyType: String
  propertyValue: Float
  term: Int
}

"""Add Contact Info Args"""
input AddVehicularCreditContactInput {
  address: String
  birthday: DateTime!
  clientSituation: String!
  cnpj: String
  companyID: String!
  contactMonthlyIncome: Float!
  cpf: String
  email: String!
  name: String!
  opportunityValue: Float
  phone: String
  vehicleManufacturedDate: String!
  vehicleModel: String!
  vehicleName: String!
  vehicleTargetValue: Float!
  vehicleValue: Float!
  vehicularCreditType: String!
}

"""Company's Authentication Args"""
input AuthenticationCompanyInput {
  email: String!
  password: String!
}

"""The basic company schema"""
type BasicCompany {
  """The company email"""
  email: String!
  id: ID!

  """The company name"""
  name: String!
  phone: String
}

"""Change company role arguments"""
input ChangeCompanyRoleInput {
  roleID: String!
}

"""The company schema"""
type Company {
  """
  It should be used to provide a time access limitation for a user through a jwt token.
  """
  accessToken: String
  associatedCompaniesID: [String!]
  avatarBitrixFileID: Float
  avatarFile: String

  """The ID returned from Bitrix platform"""
  bitrix_id: Int
  cpf_cnpj: String!
  createdAt: DateTime

  """The company email"""
  email: String!
  id: ID!
  logoBitrixFileID: Float

  """The company name"""
  name: String!

  """
  The hashed company's password. it should not be returned at any request
  """
  password: String

  """The person name"""
  personName: String!
  phone: String
  roleId: String
  sawTutorial: Boolean
  updatedAt: DateTime

  """The user name"""
  userName: String
}

"""Contact schema"""
type Contact {
  COMPANY_ID: Int
  CREATED_BY_ID: Int
  DATE_CREATE: DateTime
  DATE_MODIFY: DateTime
  EMAIL: [ContactInfo!]
  ID: Int!
  LAST_NAME: String
  NAME: String
  PHONE: [ContactInfo!]
}

"""Contact Info Schema"""
type ContactInfo {
  ID: Int!
  VALUE: String!
  VALUE_TYPE: String!
}

"""Create Basic Company Args"""
input CreateBasicCompanyInput {
  email: String!
  name: String!
  phone: String!
}

"""Create Company Args"""
input CreateCompanyInput {
  bitrix_id: Float
  cpf_cnpj: String
  email: String!
  name: String!
  password: String!
  personName: String!
  phone: String!
  token: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

"""The company deal's schema"""
type Deal {
  COMPANY_ID: Int
  CONTACT_ID: Int
  CURRENCY_ID: String
  DATE_CREATE: String
  DATE_MODIFY: String
  ID: Int!
  OPPORTUNITY: Float
  STAGE_ID: String
  TITLE: String
}

"""Files to store at our system"""
input FileInput {
  """The file as a BASE64"""
  file: String!

  """The file name"""
  fileName: String!
}

type GetAdminDataResponse {
  activeAccounts: Int!
  inactiveAccounts: Int!
  numberOfNewBusiness: Int!
  numberOfPlatformAccess: Int!
}

"""Get Company Info Args"""
input GetCompanyInfoInput {
  id: String!
}

"""Add Contact Info Args"""
input GetContactsInput {
  page: Int
}

"""The schema response for get deals service request."""
type GetContactsResponse {
  """
  If there are more deals, the bitrix api should return a number to get the next list of deals
  """
  next: Int

  """The list of Deals gathered from bitrix api."""
  result: [Contact!]

  """The number of deals gathered."""
  total: Int
}

"""Get Deal Input Arguments"""
input GetDealInput {
  dealID: Int!
}

"""Get Deal Input Arguments"""
input GetDealsInput {
  page: Int
}

"""The schema response for get deals service request."""
type GetDealsResponse {
  """
  If there are more deals, the bitrix api should return a number to get the next list of deals
  """
  next: Int

  """The list of Deals gathered from bitrix api."""
  result: [Deal!]

  """The number of deals gathered."""
  total: Int!
}

"""Verify if has permission query args"""
input HasPermissionInput {
  permissionName: String!
}

"""Price Table Installment Schema"""
type Installment {
  amortization: Float!
  amount: Float!
  installment: Float!
  interest: Float!
}

"""Login Schema"""
type Login {
  company: Company!
  token: String!
}

type Mutation {
  addContact(data: AddContactInput!): Deal!
  addVehicularCreditContact(data: AddVehicularCreditContactInput!): Deal!
  changeCompanyRole(data: ChangeCompanyRoleInput!): Company!
  confirmTutorialHasBeenViewed: Company!
  createBasicCompany(data: CreateBasicCompanyInput!): BasicCompany!
  createCompany(data: CreateCompanyInput!): Company!
  getPriceTableSimulation(data: SimulationInput!): [Installment!]!
  getSACSimulation(data: SimulationInput!): [Installment!]!
  login(data: AuthenticationCompanyInput!): Login!
  recoverPassword(data: RecoverPasswordInput!): Company!
  removeProfilePicture: Company!
  requestCreateCompany(data: RequestCreateCompanyInput!): Boolean!
  requestRecoverPassword(data: RequestRecoverPasswordInput!): RequestRecoverPasswordResponse!
  setProfilePicture(data: FileInput!): Boolean!
  updateProfile(data: UpdateCompanyProfileInput!): Company!
}

type Query {
  getAdminData: GetAdminDataResponse!
  getBasicCompanies: [BasicCompany!]
  getCompanyInfo(data: GetCompanyInfoInput!): Company!
  getCompanyRole: Role!
  getContacts(data: GetContactsInput!): GetContactsResponse!
  getDeal(data: GetDealInput!): Deal
  getDeals(data: GetDealsInput!): GetDealsResponse
  getRoles: [Role!]
  getSELICRate: SELICRate!
  getVehicularDeals(data: GetDealsInput!): GetDealsResponse
  hasPermission(data: HasPermissionInput!): Boolean!
  verifyIfCompanySawTutorial: Boolean!
}

"""Recover Password Args"""
input RecoverPasswordInput {
  """Company email to recover"""
  password: String!

  """Token sent to company's email"""
  token: String!
}

"""Request create company service args"""
input RequestCreateCompanyInput {
  email: String!
  name: String!
}

"""Request Recover Password Args"""
input RequestRecoverPasswordInput {
  """Company email to recover"""
  email: String!
}

"""Response for request recover company's password"""
type RequestRecoverPasswordResponse {
  wasMailSent: Boolean!
}

"""The user role schema"""
type Role {
  """Created date of the model"""
  createdAt: DateTime
  id: ID!

  """The role name"""
  name: String!

  """The role permissions"""
  permissions: Int!

  """Created date of the model"""
  updatedAt: DateTime
}

"""The SELIC rate"""
type SELICRate {
  date: String!
  value: Float!
}

"""Get Price Table Simulation Input"""
input SimulationInput {
  loanAmount: Float!

  """A percentage value"""
  loanInterest: Float!
  numberOfInstallments: Int!
}

"""Update Company Profile Args"""
input UpdateCompanyProfileInput {
  name: String!
  password: String!
  personName: String!
  phone: String!
}
